# This file defines a continuous integration workflow
# based on Fastlane, see https://docs.fastlane.tools/

name: Upload Beta App to TestFlight

on:
  push:
    # This workflow only gets executed if the
    # commit is tagged with a new version
    tags:
      - v*

jobs:
  distribute:
    runs-on: macos-latest

    env:
      destination: 'platform=iOS Simulator,OS=14.2,name=iPhone 11 Pro'
      # See https://github.com/actions/virtual-environments for
      # further information on which Xcode versions are supported
      xcode: '/Applications/Xcode_12.2.app'

    steps:
      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Select Specified Xcode Version
        run: sudo xcode-select -s ${{ env.xcode }}

      - name: Install Fastlane and Cocoapods via Rubygems
        # If there are private gems in the Gemfile, don't
        # forget to include the BUNDLE_GITHUB__COM env var
        run: bundle install

      - name: Install Project Dependencies via Cocoapods
        run: bundle exec pod install

      - name: Set Environment Variables from Xcode Project Settings
        run: exec .github/scripts/set-env-from-xcodeproj.sh

      - name: Import Signing Certificate to Keychain
        env:
          SIGNING_CERTIFICATE_P12_DATA: ${{ secrets.SIGNING_CERTIFICATE_P12_DATA }}
          SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.SIGNING_CERTIFICATE_PASSWORD }}
        run: exec .github/scripts/import-certificate.sh

      - name: Import Provisioning Profile to Filesystem
        env:
          PROVISIONING_PROFILE_DATA: ${{ secrets.PROVISIONING_PROFILE_DATA }}
        run: exec .github/scripts/import-profile.sh

      - name: Archive App via Fastlane Gym
        run: bundle exec fastlane run gym

      - name: Upload Build Log to Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build.log
          path: ~/Library/Logs/gym/*.log

      - name: Add the Current Tag Name to the Environment
        run: echo "TAG_NAME=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          body: This release was generated by GitHub Actions.
          draft: false
          prerelease: false

      - name: Upload IPA to Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.PRODUCT_NAME }}.ipa
          asset_name: ${{ env.PRODUCT_NAME }}.ipa
          asset_content_type: application/octet-stream

      - name: Upload zipped dSYM to Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.PRODUCT_NAME }}.app.dSYM.zip
          asset_name: ${{ env.PRODUCT_NAME }}.app.dSYM.zip
          asset_content_type: application/octet-stream

      - name: Import App Store Connect API Key
        env:
          API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
        run: |
          echo "$API_KEY" | base64 --decode > APIKey.p8

      - name: Upload Beta App to TestFlight with Fastlane Pilot
        env:
          APP_IPA_PATH: ${{ env.PRODUCT_NAME }}.ipa
          API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          API_KEY_ISSUER: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER }}
          API_KEY_LOCATION: APIKey.p8
        run: bundle exec fastlane beta
